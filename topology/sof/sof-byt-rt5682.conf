








SectionData."SOF_ABI" {
	bytes "0x03,0x0b,0x00"
}
SectionManifest.STR(sof_manifest) {
	data [
		SOF_ABI
	]
}
#
# Topology for generic Baytrail board with RT5682.




#

# Include topology builder




































 

























# Include TLV library
# TLV
#
# Common TLV control ranges
#

SectionTLV."vtlv_m64s2" {
	Comment "-64dB step 2dB"

	scale {
		min "-6400"
		step "200"
		mute "1"
	}
}

SectionTLV."vtlv_m50s1" {
	Comment "-50dB step 1dB"

	scale {
		min "-5000"
		step "100"
		mute "1"
	}
}


# Include Token library

#
# SOF Tokens for differentiation.
#
# Differentiation can be done at the platform and machine level.
#
# Tokens are GUIDs

# TODO: pre-process this with UAPI headers GNU cpp.


SectionVendorTokens."sof_buffer_tokens" {
	SOF_TKN_BUF_SIZE			"100"
	SOF_TKN_BUF_CAPS			"101"
}

SectionVendorTokens."sof_dai_tokens" {
# Token retired with ABI 3.2, do not use for new capabilities
#	SOF_TKN_DAI_DMAC_CONFIG			"153"
	SOF_TKN_DAI_TYPE			"154"
	SOF_TKN_DAI_INDEX			"155"
	SOF_TKN_DAI_DIRECTION			"156"
}

SectionVendorTokens."sof_sched_tokens" {
	SOF_TKN_SCHED_PERIOD			"200"
	SOF_TKN_SCHED_PRIORITY			"201"
	SOF_TKN_SCHED_MIPS			"202"
	SOF_TKN_SCHED_CORE			"203"
	SOF_TKN_SCHED_FRAMES			"204"
	SOF_TKN_SCHED_TIME_DOMAIN		"205"
}

SectionVendorTokens."sof_volume_tokens" {
	SOF_TKN_VOLUME_RAMP_STEP_TYPE		"250"
	SOF_TKN_VOLUME_RAMP_STEP_MS		"251"
}

SectionVendorTokens."sof_src_tokens" {
	SOF_TKN_SRC_RATE_IN			"300"
	SOF_TKN_SRC_RATE_OUT			"301"
}

SectionVendorTokens."sof_pcm_tokens" {
	SOF_TKN_PCM_DMAC_CONFIG			"353"
}

SectionVendorTokens."sof_comp_tokens" {
	SOF_TKN_COMP_PERIOD_SINK_COUNT		"400"
	SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"401"
	SOF_TKN_COMP_FORMAT			"402"
# Token retired with ABI 3.2, do not use for new capabilities
#	SOF_TKN_COMP_PRELOAD_COUNT		"403"
}

SectionVendorTokens."sof_ssp_tokens" {
	SOF_TKN_INTEL_SSP_CLKS_CONTROL		"500"
	SOF_TKN_INTEL_SSP_MCLK_ID		"501"
	SOF_TKN_INTEL_SSP_SAMPLE_BITS		"502"
	SOF_TKN_INTEL_SSP_FRAME_PULSE_WIDTH 	"503"
	SOF_TKN_INTEL_SSP_QUIRKS		"504"
	SOF_TKN_INTEL_SSP_TDM_PADDING_PER_SLOT  "505"
	SOF_TKN_INTEL_SSP_BCLK_DELAY		"506"
}

SectionVendorTokens."sof_dmic_tokens" {
	SOF_TKN_INTEL_DMIC_DRIVER_VERSION	"600"
	SOF_TKN_INTEL_DMIC_CLK_MIN		"601"
	SOF_TKN_INTEL_DMIC_CLK_MAX		"602"
	SOF_TKN_INTEL_DMIC_DUTY_MIN		"603"
	SOF_TKN_INTEL_DMIC_DUTY_MAX		"604"
	SOF_TKN_INTEL_DMIC_NUM_PDM_ACTIVE	"605"
	SOF_TKN_INTEL_DMIC_SAMPLE_RATE		"608"
	SOF_TKN_INTEL_DMIC_FIFO_WORD_LENGTH	"609"
	SOF_TKN_INTEL_DMIC_UNMUTE_RAMP_TIME_MS	"610"
}

SectionVendorTokens."sof_dmic_pdm_tokens" {
	SOF_TKN_INTEL_DMIC_PDM_CTRL_ID		"700"
	SOF_TKN_INTEL_DMIC_PDM_MIC_A_Enable	"701"
	SOF_TKN_INTEL_DMIC_PDM_MIC_B_Enable	"702"
	SOF_TKN_INTEL_DMIC_PDM_POLARITY_A	"703"
	SOF_TKN_INTEL_DMIC_PDM_POLARITY_B	"704"
	SOF_TKN_INTEL_DMIC_PDM_CLK_EDGE		"705"
	SOF_TKN_INTEL_DMIC_PDM_SKEW		"706"
}

SectionVendorTokens."sof_tone_tokens" {
	SOF_TKN_TONE_SAMPLE_RATE		"800"
}

SectionVendorTokens."sof_process_tokens" {
	SOF_TKN_PROCESS_TYPE			"900"
}

SectionVendorTokens."sof_sai_tokens" {
	SOF_TKN_IMX_SAI_MCLK_ID			"1000"
}

SectionVendorTokens."sof_esai_tokens" {
	SOF_TKN_IMX_ESAI_MCLK_ID		"1100"
}

SectionVendorTokens."sof_stream_tokens" {
	SOF_TKN_STREAM_PLAYBACK_COMPATIBLE_D0I3		"1200"
	SOF_TKN_STREAM_CAPTURE_COMPATIBLE_D0I3		"1201"
}

SectionVendorTokens."sof_led_tokens" {
	SOF_TKN_MUTE_LED_USE			"1300"
	SOF_TKN_MUTE_LED_DIRECTION		"1301"
}


# Include Baytrail DSP configuration
#
# Baytrail differentiation for pipelines and components
#
















# Low Latency PCM Configuration
SectionVendorTuples."pipe_ll_schedule_plat_tokens" {
	tokens "sof_sched_tokens"

	tuples."word" {
		SOF_TKN_SCHED_MIPS	"50000"
		
	}
}

SectionData."pipe_ll_schedule_plat" {
	tuples "pipe_ll_schedule_plat_tokens"
}

# Media PCM Configuration
SectionVendorTuples."pipe_media_schedule_plat_tokens" {
	tokens "sof_sched_tokens"

	tuples."word" {
		SOF_TKN_SCHED_MIPS	"100000"
		
	}
}

SectionData."pipe_media_schedule_plat" {
	tuples "pipe_media_schedule_plat_tokens"
}

# Tone Signal Generator Configuration
SectionVendorTuples."pipe_tone_schedule_plat_tokens" {
	tokens "sof_sched_tokens"

	tuples."word" {
		SOF_TKN_SCHED_MIPS	"200000"
		
	}
}

SectionData."pipe_tone_schedule_plat" {
	tuples "pipe_tone_schedule_plat_tokens"
}

# DAI schedule Configuration - scheduled by IRQ
SectionVendorTuples."pipe_dai_schedule_plat_tokens" {
	tokens "sof_sched_tokens"

	tuples."word" {
		SOF_TKN_SCHED_MIPS	"5000"
		
	}
}

SectionData."pipe_dai_schedule_plat" {
	tuples "pipe_dai_schedule_plat_tokens"
}

SectionWidget."codec_out0" {
       index "1"
       type "output"
       no_pm "true"
}
SectionWidget."codec_out1" {
       index "2"
       type "output"
       no_pm "true"
}
SectionWidget."codec_in0" {
       index "3"
       type "input"
       no_pm "true"
}
SectionWidget."codec_in1" {
       index "4"
       type "input"
       no_pm "true"
}




#
# Define the pipelines
#
# PCM0 ----> volume ---------------+
#                                  |--low latency mixer ----> volume ---->  SSP2
# PCM1 -----> volume ----> SRC ----+
#
# PCM0 <---- Volume <---- SSP2
#

# Low Latency playback pipeline 1 on PCM 0 using max 2 channels of s32le.
# 1000us deadline on core 0 with priority 1




























# Low Latency Pipeline
#
#  Low Latency Playback PCM mixed into single sink pipe.
#  Low latency Capture PCM.
#
# Pipeline Endpoints for connection are :-
#
#	LL Playback Mixer (Mixer)
#	LL Capture Volume B4 (DAI buffer)
#	LL Playback Volume B3 (DAI buffer)
#
#
#  host PCM_P --B0--> volume(0P) --B1--+
#                                      |--ll mixer(M) --B2--> volume(LL) ---B3-->  sink DAI0
#                     pipeline n+1 >---+
#                                      |
#                     pipeline n+2 >---+
#                                      |
#                     pipeline n+3 >---+  .....etc....more pipes can be mixed here
#

# Include topology builder




































 







#
# Controls
#
# Volume Mixer control with max value of 32
 
SectionControlMixer."1 PCM 0 Playback Volume" {

	# control belongs to this index group
	index "1"

	#Channel register and shift for Front Left/Right
	channel."FR" {
		reg "0"
		shift "1"
	}
channel."FL" {
		reg "0"
		shift "0"
	}
	# control uses bespoke driver get/put/info ID
	ops."ctl" {
		info "volsw"
		#256 binds the mixer control to volume get/put handlers
		get "256"
		put "256"
	}

	#
	max "32"
	invert "false"
	#TLV 32 steps from -64dB to 0dB for 2dB
	tlv "vtlv_m64s2"
 
}

# Volume Mixer control with max value of 32
 
SectionControlMixer."1 Master Playback Volume" {

	# control belongs to this index group
	index "1"

	#Channel register and shift for Front Left/Right
	channel."FL" {
		reg "1"
		shift "0"
	}
	channel."FR" {
		reg "1"
		shift "1"
	}
	
	# control uses bespoke driver get/put/info ID
	ops."ctl" {
		info "volsw"
		#256 binds the mixer control to volume get/put handlers
		get "256"
		put "256"
	}

	#
	max "32"
	invert "false"
	#TLV 32 steps from -64dB to 0dB for 2dB
	tlv "vtlv_m64s2"
 
}

#
# Volume configuration
#

SectionVendorTuples."playback_pga_tokens" {
	tokens "sof_volume_tokens"

	tuples."word" {
		SOF_TKN_VOLUME_RAMP_STEP_TYPE	"0"
     		
		SOF_TKN_VOLUME_RAMP_STEP_MS		"250"
		
	}
}

SectionData."playback_pga_conf" {
	tuples "playback_pga_tokens"
}

#
# Components and Buffers
#

# Host "Low latency Playback" PCM
# with 2 sink and 0 source periods
SectionVendorTuples."PCM0P_tuples_w_comp" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"2"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"0"
	}
}
SectionData."PCM0P_data_w_comp" {
	tuples "PCM0P_tuples_w_comp"
}
SectionWidget."PCM0P" {
	index "1"
	type "aif_in"
	no_pm "true"
	stream_name "Low Latency Playback 0"
	data [
		"PCM0P_data_w_comp"
	]
}

# "Playback Volume" has 2 sink periods and 2 source periods for host ping-pong
SectionVendorTuples."PGA1.0_tuples_w" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"2"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"2"
	}
}
SectionData."PGA1.0_data_w" {
	tuples "PGA1.0_tuples_w"
}
SectionVendorTuples."PGA1.0_tuples_str" {
	tokens "sof_comp_tokens"
	tuples."string" {
		SOF_TKN_COMP_FORMAT	"s32le"
	}
}
SectionData."PGA1.0_data_str" {
	tuples "PGA1.0_tuples_str"
}
SectionWidget."PGA1.0" {
	index "1"
	type "pga"
	no_pm "true"
	data [
		"PGA1.0_data_w"
		"PGA1.0_data_str"
		"playback_pga_conf"
	]
	mixer [
		"1 PCM 0 Playback Volume"
		
	]

}

# "Master Playback Volume" has 2 source and x sink periods for DAI ping-pong
SectionVendorTuples."PGA1.1_tuples_w" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"2"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"2"
	}
}
SectionData."PGA1.1_data_w" {
	tuples "PGA1.1_tuples_w"
}
SectionVendorTuples."PGA1.1_tuples_str" {
	tokens "sof_comp_tokens"
	tuples."string" {
		SOF_TKN_COMP_FORMAT	"s32le"
	}
}
SectionData."PGA1.1_data_str" {
	tuples "PGA1.1_tuples_str"
}
SectionWidget."PGA1.1" {
	index "1"
	type "pga"
	no_pm "true"
	data [
		"PGA1.1_data_w"
		"PGA1.1_data_str"
		"playback_pga_conf"
	]
	mixer [
		"1 Master Playback Volume"
		
	]

}

# Mixer 0 has 2 sink and source periods.
SectionVendorTuples."MIXER1.0_tuples_w" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"2"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"2"
	}
}
SectionData."MIXER1.0_data_w" {
	tuples "MIXER1.0_tuples_w"
}
SectionVendorTuples."MIXER1.0_tuples_str" {
	tokens "sof_comp_tokens"
	tuples."string" {
		SOF_TKN_COMP_FORMAT	"s32le"
	}
}
SectionData."MIXER1.0_data_str" {
	tuples "MIXER1.0_tuples_str"
}
SectionWidget."MIXER1.0" {
	index "1"
	type "mixer"
	no_pm "true"
	data [
		"MIXER1.0_data_w"
		"MIXER1.0_data_str"
	]
}

# Low Latency Buffers
SectionVendorTuples."BUF1.0_tuples" {
	tokens "sof_buffer_tokens"
	tuples."word" {
		SOF_TKN_BUF_SIZE	"768"
		SOF_TKN_BUF_CAPS	"  97"
	}
}
SectionData."BUF1.0_data" {
	tuples "BUF1.0_tuples"
}
SectionWidget."BUF1.0" {
	index "1"
	type "buffer"
	no_pm "true"
	data [
		"BUF1.0_data"
	]
}
SectionVendorTuples."BUF1.1_tuples" {
	tokens "sof_buffer_tokens"
	tuples."word" {
		SOF_TKN_BUF_SIZE	"768"
		SOF_TKN_BUF_CAPS	"  65"
	}
}
SectionData."BUF1.1_data" {
	tuples "BUF1.1_tuples"
}
SectionWidget."BUF1.1" {
	index "1"
	type "buffer"
	no_pm "true"
	data [
		"BUF1.1_data"
	]
}
SectionVendorTuples."BUF1.2_tuples" {
	tokens "sof_buffer_tokens"
	tuples."word" {
		SOF_TKN_BUF_SIZE	"768"
		SOF_TKN_BUF_CAPS	"  65"
	}
}
SectionData."BUF1.2_data" {
	tuples "BUF1.2_tuples"
}
SectionWidget."BUF1.2" {
	index "1"
	type "buffer"
	no_pm "true"
	data [
		"BUF1.2_data"
	]
}
SectionVendorTuples."BUF1.3_tuples" {
	tokens "sof_buffer_tokens"
	tuples."word" {
		SOF_TKN_BUF_SIZE	"768"
		SOF_TKN_BUF_CAPS	"  97"
	}
}
SectionData."BUF1.3_data" {
	tuples "BUF1.3_tuples"
}
SectionWidget."BUF1.3" {
	index "1"
	type "buffer"
	no_pm "true"
	data [
		"BUF1.3_data"
	]
}

#
# Pipeline Graph
#
#  host PCM_P --B0--> volume(0P) --B1--+
#                                      |--ll mixer(M) --B2--> volume(LL) ---B3-->  sink DAI0
#                     pipeline n+1 >---+
#                                      |
#                     pipeline n+2 >---+
#                                      |
#                     pipeline n+3 >---+  .....etc....more pipes can be mixed here
#

SectionGraph."pipe-ll-playback-1" {
	index "1"

	lines [
		"BUF1.0, , PCM0P"
		"PGA1.0, , BUF1.0"
		"BUF1.1, , PGA1.0"
		"MIXER1.0, , BUF1.1"
		"BUF1.2, , MIXER1.0"
		"PGA1.1, , BUF1.2"
		"BUF1.3, , PGA1.1"
		
	]
}

#
# Pipeline Source and Sinks
#




#
# PCM Configuration
#


# PCM capabilities supported by FW
SectionPCMCapabilities."Low Latency Playback 0" {

	formats "S32_LE,S24_LE,S16_LE"
	rate_min "48000"
	rate_max "48000"
	channels_min "2"
	channels_max "2"
	periods_min "2"
	periods_max "16"
	period_size_min	"192"
	period_size_max	"16384"
	buffer_size_min	"65536"
	buffer_size_max	"65536"
}






# Low Latency capture pipeline 2 on PCM 0 using max 2 channels of s32le.
# 1000us deadline on core 0 with priority 0




























# Low Latency Pipeline and PCM
#
# Pipeline Endpoints for connection are :-
#
#  host PCM_C <--B5-- volume(0C) <--B4-- source DAI0

# Include topology builder




































 






#
# Controls
#
# Volume Mixer control with max value of 32
 
SectionControlMixer."2 PCM 0 Capture Volume" {

	# control belongs to this index group
	index "2"

	#Channel register and shift for Front Left/Right
	channel."FL" {
		reg "0"
		shift "0"
	}
	channel."FR" {
		reg "0"
		shift "1"
	}
	
	# control uses bespoke driver get/put/info ID
	ops."ctl" {
		info "volsw"
		#256 binds the mixer control to volume get/put handlers
		get "256"
		put "256"
	}

	#
	max "40"
	invert "false"
	#TLV 32 steps from -64dB to 0dB for 2dB
	tlv "vtlv_m64s2"
 
}

#
# Volume configuration
#

SectionVendorTuples."capture_pga_tokens" {
	tokens "sof_volume_tokens"

	tuples."word" {
		SOF_TKN_VOLUME_RAMP_STEP_TYPE	"0"
     		
		SOF_TKN_VOLUME_RAMP_STEP_MS		"250"
		
	}
}

SectionData."capture_pga_conf" {
	tuples "capture_pga_tokens"
}

#
# Components and Buffers
#

# Host "Low Latency Capture" PCM
# with 0 sink and 2 source periods
SectionVendorTuples."PCM0C_tuples_w_comp" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"0"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"2"
	}
}
SectionData."PCM0C_data_w_comp" {
	tuples "PCM0C_tuples_w_comp"
}
SectionWidget."PCM0C" {
	index "2"
	type "aif_out"
	no_pm "true"
	stream_name "Low Latency Capture 0"
	data [
		"PCM0C_data_w_comp"
	]
}

# "Capture Volume" has 2 sink and x source periods for host and DAI ping-pong
SectionVendorTuples."PGA2.0_tuples_w" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"2"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"2"
	}
}
SectionData."PGA2.0_data_w" {
	tuples "PGA2.0_tuples_w"
}
SectionVendorTuples."PGA2.0_tuples_str" {
	tokens "sof_comp_tokens"
	tuples."string" {
		SOF_TKN_COMP_FORMAT	"s32le"
	}
}
SectionData."PGA2.0_data_str" {
	tuples "PGA2.0_tuples_str"
}
SectionWidget."PGA2.0" {
	index "2"
	type "pga"
	no_pm "true"
	data [
		"PGA2.0_data_w"
		"PGA2.0_data_str"
		"capture_pga_conf"
	]
	mixer [
		"2 PCM 0 Capture Volume"
		
	]

}

# Capture Buffers
SectionVendorTuples."BUF2.0_tuples" {
	tokens "sof_buffer_tokens"
	tuples."word" {
		SOF_TKN_BUF_SIZE	"768"
		SOF_TKN_BUF_CAPS	"  97"
	}
}
SectionData."BUF2.0_data" {
	tuples "BUF2.0_tuples"
}
SectionWidget."BUF2.0" {
	index "2"
	type "buffer"
	no_pm "true"
	data [
		"BUF2.0_data"
	]
}
SectionVendorTuples."BUF2.1_tuples" {
	tokens "sof_buffer_tokens"
	tuples."word" {
		SOF_TKN_BUF_SIZE	"768"
		SOF_TKN_BUF_CAPS	"  97"
	}
}
SectionData."BUF2.1_data" {
	tuples "BUF2.1_tuples"
}
SectionWidget."BUF2.1" {
	index "2"
	type "buffer"
	no_pm "true"
	data [
		"BUF2.1_data"
	]
}

#
# Pipeline Graph
#
#  host PCM <--B1-- volume <--B0-- source DAI0

SectionGraph."pipe-ll-capture-2" {
	index "2"

	lines [
		"PCM0C, , BUF2.1"
		"BUF2.1, , PGA2.0"
		"PGA2.0, , BUF2.0"
		
	]
}

#
# Pipeline Source and Sinks
#



#
# PCM Configuration
#

SectionPCMCapabilities."Low Latency Capture 0" {

	formats "S32_LE,S24_LE,S16_LE"
	rate_min "48000"
	rate_max "48000"
	channels_min "2"
	channels_max "2"
	periods_min "2"
	periods_max "4"
	period_size_min	"192"
	period_size_max	"16384"
	buffer_size_min	"65536"
	buffer_size_max	"65536"
}





#
# DAI configuration
#
# SSP port 2 is our only pipeline DAI
#

# playback DAI is SSP2 using 2 periods
# Buffers use s24le format, 1000us deadline on core 0 with priority 1























# DAI Playback connector

# Include topology builder




































 
























#
# DAI definitions
#
SectionVendorTuples."SSP2.OUT_tuples_w_comp" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"0"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"2"
	}
}
SectionData."SSP2.OUT_data_w_comp" {
	tuples "SSP2.OUT_tuples_w_comp"
}
SectionVendorTuples."SSP2.OUT_tuples_w" {
	tokens "sof_dai_tokens"
	tuples."word" {
		SOF_TKN_DAI_INDEX	"2"
		SOF_TKN_DAI_DIRECTION	"0"
	}
}
SectionData."SSP2.OUT_data_w" {
	tuples "SSP2.OUT_tuples_w"
}
SectionVendorTuples."SSP2.OUT_tuples_str" {
	tokens "sof_dai_tokens"
	tuples."string" {
		SOF_TKN_DAI_TYPE	"SSP"
	}
}
SectionData."SSP2.OUT_data_str" {
	tuples "SSP2.OUT_tuples_str"
}
SectionVendorTuples."SSP2.OUT_tuples_comp_str" {
	tokens "sof_comp_tokens"
	tuples."string" {
		SOF_TKN_COMP_FORMAT	"s24le"
	}
}
SectionData."SSP2.OUT_data_comp_str" {
	tuples "SSP2.OUT_tuples_comp_str"
}
SectionWidget."SSP2.OUT" {
	index "1"
	type "dai_in"
	stream_name "SSP2-Codec"
	no_pm "true"
	data [
		"SSP2.OUT_data_w"
		"SSP2.OUT_data_w_comp"
		"SSP2.OUT_data_str"
		"SSP2.OUT_data_comp_str"
	]
}

#
# DAI pipeline - always use 0 for DAIs
#
SectionVendorTuples."PIPELINE.1.SSP2.OUT_tuples" {
	tokens "sof_sched_tokens"
	tuples."word" {
		SOF_TKN_SCHED_PERIOD		"1000"
		SOF_TKN_SCHED_PRIORITY		"1"
		SOF_TKN_SCHED_CORE		"0"
		SOF_TKN_SCHED_FRAMES		"0"
		SOF_TKN_SCHED_TIME_DOMAIN	""
	}
}
SectionData."PIPELINE.1.SSP2.OUT_data" {
	tuples "PIPELINE.1.SSP2.OUT_tuples"
}
SectionWidget."PIPELINE.1.SSP2.OUT" {
	index "1"
	type "scheduler"
	no_pm "true"
	stream_name "SSP2.OUT"
	data [
		"PIPELINE.1.SSP2.OUT_data"
		"pipe_dai_schedule_plat"
	]
}

#
# Graph connections to pipelines

SectionGraph."SSP2" {
	index "1"

	lines [
		"SSP2.OUT, , BUF1.3"
		
	]
}






# PCM Media Playback pipeline 3 on PCM 1 using max 2 channels of s32le.
# 4000us deadline on core 0 with priority 0




























# Low Power PCM Media Pipeline
#
#  Low power PCM media playback with SRC and volume.
#
# Pipeline Endpoints for connection are :-
#
#  host PCM_P --B0--> volume(0P) --B1--> SRC -- B2 --> Endpoint Pipeline
#

# Include topology builder




































 








#
# Controls
#
# Volume Mixer control with max value of 32
 
SectionControlMixer."3 PCM 1 Playback Volume" {

	# control belongs to this index group
	index "3"

	#Channel register and shift for Front Left/Right
	channel."FL" {
		reg "1"
		shift "0"
	}
	channel."FR" {
		reg "1"
		shift "1"
	}
	
	# control uses bespoke driver get/put/info ID
	ops."ctl" {
		info "volsw"
		#256 binds the mixer control to volume get/put handlers
		get "256"
		put "256"
	}

	#
	max "32"
	invert "false"
	#TLV 32 steps from -64dB to 0dB for 2dB
	tlv "vtlv_m64s2"
 
}

#
# SRC Configuration
#

SectionVendorTuples."media_src_tokens" {
	tokens "sof_src_tokens"

	tuples."word" {
		SOF_TKN_SRC_RATE_OUT	"48000"
		
	}
}

SectionData."media_src_conf" {
	tuples "media_src_tokens"
}

#
# Volume Configuration
#

SectionVendorTuples."playback_pga_tokens" {
	tokens "sof_volume_tokens"

	tuples."word" {
		SOF_TKN_VOLUME_RAMP_STEP_TYPE	"0"
     		
		SOF_TKN_VOLUME_RAMP_STEP_MS		"250"
		
	}
}

SectionData."playback_pga_conf" {
	tuples "playback_pga_tokens"
}

#
# Components and Buffers
#

# Host "Media Playback" PCM
# with 2 sink and 0 source periods
SectionVendorTuples."PCM1P_tuples_w_comp" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"2"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"0"
	}
}
SectionData."PCM1P_data_w_comp" {
	tuples "PCM1P_tuples_w_comp"
}
SectionWidget."PCM1P" {
	index "3"
	type "aif_in"
	no_pm "true"
	stream_name "Media Playback 1"
	data [
		"PCM1P_data_w_comp"
	]
}

# "Playback Volume" has 2 sink period and 2 source periods for host ping-pong
SectionVendorTuples."PGA3.0_tuples_w" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"2"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"2"
	}
}
SectionData."PGA3.0_data_w" {
	tuples "PGA3.0_tuples_w"
}
SectionVendorTuples."PGA3.0_tuples_str" {
	tokens "sof_comp_tokens"
	tuples."string" {
		SOF_TKN_COMP_FORMAT	"s16le"
	}
}
SectionData."PGA3.0_data_str" {
	tuples "PGA3.0_tuples_str"
}
SectionWidget."PGA3.0" {
	index "3"
	type "pga"
	no_pm "true"
	data [
		"PGA3.0_data_w"
		"PGA3.0_data_str"
		"playback_pga_conf"
	]
	mixer [
		"3 PCM 1 Playback Volume"
		
	]

}

# "SRC 0" has 2 sink and source periods.
SectionVendorTuples."SRC3.0_tuples_w" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"2"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"2"
	}
}
SectionData."SRC3.0_data_w" {
	tuples "SRC3.0_tuples_w"
}
SectionVendorTuples."SRC3.0_tuples_str" {
	tokens "sof_comp_tokens"
	tuples."string" {
		SOF_TKN_COMP_FORMAT	"s16le"
	}
}
SectionData."SRC3.0_data_str" {
	tuples "SRC3.0_tuples_str"
}
SectionWidget."SRC3.0" {
	index "3"
	type "src"
	no_pm "true"
	data [
		"SRC3.0_data_w"
		"SRC3.0_data_str"
		"media_src_conf"
	]
}

# Media Source Buffers to SRC, make them big enough to deal with 2 * rate.
SectionVendorTuples."BUF3.0_tuples" {
	tokens "sof_buffer_tokens"
	tuples."word" {
		SOF_TKN_BUF_SIZE	"6144"
		SOF_TKN_BUF_CAPS	"  97"
	}
}
SectionData."BUF3.0_data" {
	tuples "BUF3.0_tuples"
}
SectionWidget."BUF3.0" {
	index "3"
	type "buffer"
	no_pm "true"
	data [
		"BUF3.0_data"
	]
}
SectionVendorTuples."BUF3.1_tuples" {
	tokens "sof_buffer_tokens"
	tuples."word" {
		SOF_TKN_BUF_SIZE	"6144"
		SOF_TKN_BUF_CAPS	"  65"
	}
}
SectionData."BUF3.1_data" {
	tuples "BUF3.1_tuples"
}
SectionWidget."BUF3.1" {
	index "3"
	type "buffer"
	no_pm "true"
	data [
		"BUF3.1_data"
	]
}

# Buffer B2 is on fixed rate sink side of SRC.
SectionVendorTuples."BUF3.2_tuples" {
	tokens "sof_buffer_tokens"
	tuples."word" {
		SOF_TKN_BUF_SIZE	"6144"
		SOF_TKN_BUF_CAPS	"  65"
	}
}
SectionData."BUF3.2_data" {
	tuples "BUF3.2_tuples"
}
SectionWidget."BUF3.2" {
	index "3"
	type "buffer"
	no_pm "true"
	data [
		"BUF3.2_data"
	]
}

#
# Pipeline Graph
#
#  PCM --B0--> volume --B1--> SRC --> B2 --> Endpoint Pipeline
#

SectionGraph."pipe-media-3" {
	index "3"

	lines [
		"BUF3.0, , PCM1P"
		"PGA3.0, , BUF3.0"
		"BUF3.1, , PGA3.0"
		"SRC3.0, , BUF3.1"
	"BUF3.2, , SRC3.0"
		
	]
}

#
# Pipeline Source and Sinks
#


#
# Pipeline Configuration.
#

SectionVendorTuples."PIPELINE.3.SSP2.OUT_tuples" {
	tokens "sof_sched_tokens"
	tuples."word" {
		SOF_TKN_SCHED_PERIOD		"4000"
		SOF_TKN_SCHED_PRIORITY		"0"
		SOF_TKN_SCHED_CORE		"0"
		SOF_TKN_SCHED_FRAMES		"0"
		SOF_TKN_SCHED_TIME_DOMAIN	"0"
	}
}
SectionData."PIPELINE.3.SSP2.OUT_data" {
	tuples "PIPELINE.3.SSP2.OUT_tuples"
}
SectionWidget."PIPELINE.3.SSP2.OUT" {
	index "3"
	type "scheduler"
	no_pm "true"
	stream_name "SSP2.OUT"
	data [
		"PIPELINE.3.SSP2.OUT_data"
		"pipe_media_schedule_plat"
	]
}

#
# PCM Configuration
#

# PCM capabilities supported by FW

SectionPCMCapabilities."Media Playback 1" {

	formats "S32_LE,S24_LE,S16_LE"
	rate_min "8000"
	rate_max "96000"
	channels_min "2"
	channels_max "2"
	periods_min "2"
	periods_max "32"
	period_size_min	"192"
	period_size_max	"262144"
	buffer_size_min	"8388608"
	buffer_size_max	"8388608"
}

# PCM Media Playback
SectionPCM."Media Playback 1" {

	index "3"

	# used for binding to the PCM
	id "1"

	dai."Media Playback 1" {
		id "1"
	}

	# Playback Configuration
	pcm."playback" {

		capabilities "Media Playback 1"
	}
}





# Connect pipelines together
SectionGraph."pipe-byt-rt5682" {
	index "0"

	lines [
		# media 0
		"MIXER1.0, , BUF3.2"
	]
}

# capture DAI is SSP2 using 2 periods
# Buffers use s24le format, 1000us deadline on core 0 with priority 0























# DAI Capture connector

# Include topology builder




































 
























#
# DAI definitions
#
SectionVendorTuples."SSP2.IN_tuples_w_comp" {
	tokens "sof_comp_tokens"
	tuples."word" {
		SOF_TKN_COMP_PERIOD_SINK_COUNT		"2"
		SOF_TKN_COMP_PERIOD_SOURCE_COUNT	"0"
	}
}
SectionData."SSP2.IN_data_w_comp" {
	tuples "SSP2.IN_tuples_w_comp"
}
SectionVendorTuples."SSP2.IN_tuples_w" {
	tokens "sof_dai_tokens"
	tuples."word" {
		SOF_TKN_DAI_INDEX	"2"
		SOF_TKN_DAI_DIRECTION	"1"
	}
}
SectionData."SSP2.IN_data_w" {
	tuples "SSP2.IN_tuples_w"
}
SectionVendorTuples."SSP2.IN_tuples_str" {
	tokens "sof_dai_tokens"
	tuples."string" {
		SOF_TKN_DAI_TYPE	"SSP"
	}
}
SectionData."SSP2.IN_data_str" {
	tuples "SSP2.IN_tuples_str"
}
SectionVendorTuples."SSP2.IN_tuples_comp_str" {
	tokens "sof_comp_tokens"
	tuples."string" {
		SOF_TKN_COMP_FORMAT	"s24le"
	}
}
SectionData."SSP2.IN_data_comp_str" {
	tuples "SSP2.IN_tuples_comp_str"
}
SectionWidget."SSP2.IN" {
	index "2"
	type "dai_out"
	stream_name "SSP2-Codec"
	no_pm "true"
	data [
		"SSP2.IN_data_w"
		"SSP2.IN_data_w_comp"
		"SSP2.IN_data_str"
		"SSP2.IN_data_comp_str"
	]
}

#
# DAI pipeline - always use 0 for DAIs
#
SectionVendorTuples."PIPELINE.2.SSP2.IN_tuples" {
	tokens "sof_sched_tokens"
	tuples."word" {
		SOF_TKN_SCHED_PERIOD		"1000"
		SOF_TKN_SCHED_PRIORITY		"0"
		SOF_TKN_SCHED_CORE		"0"
		SOF_TKN_SCHED_FRAMES		"0"
		SOF_TKN_SCHED_TIME_DOMAIN	""
	}
}
SectionData."PIPELINE.2.SSP2.IN_data" {
	tuples "PIPELINE.2.SSP2.IN_tuples"
}
SectionWidget."PIPELINE.2.SSP2.IN" {
	index "2"
	type "scheduler"
	no_pm "true"
	stream_name "SSP2.IN"
	data [
		"PIPELINE.2.SSP2.IN_data"
		"pipe_dai_schedule_plat"
	]
}

#
# Graph connections to pipelines

SectionGraph."SSP2" {
	index "2"

	lines [
		"BUF2.0, , SSP2.IN"
		
	]
}






# PCM Low Latency
SectionPCM."Low Latency" {

	# used for binding to the PCM
	id "0"

	dai."Low Latency 0" {
		id "0"
	}

	pcm."capture" {

		capabilities "Low Latency Capture 0"
	}

	pcm."playback" {

		capabilities "Low Latency Playback 0"
	}
}


#
# BE configurations - overrides config in ACPI if present
#
SectionHWConfig."SSP2" {

	id		"0"

	format		"I2S"
	mclk		"codec_mclk_in"
	mclk_freq	"19200000"
	
	bclk		"codec_slave"
	bclk_freq	"2400000"
	
	fsync		"codec_slave"
	fsync_freq	"48000"
	
	tdm_slots	"2"
	tdm_slot_width	"25"
	tx_slots	"3"
	rx_slots	"3"

}
SectionVendorTuples."DAICONFIG.SSP2_tuples" {
	tokens "sof_ssp_tokens"
	tuples."word" {
		SOF_TKN_INTEL_SSP_SAMPLE_BITS	"24"
		SOF_TKN_INTEL_SSP_QUIRKS	""
		SOF_TKN_INTEL_SSP_BCLK_DELAY	""
	}
	tuples."short" {
		SOF_TKN_INTEL_SSP_MCLK_ID	""
	}
}
SectionData."DAICONFIG.SSP2_data" {
	tuples "DAICONFIG.SSP2_tuples"
}



SectionVendorTuples."DAICONFIG.SSP2_tuples_common" {
	tokens "sof_dai_tokens"
	tuples."string" {
		SOF_TKN_DAI_TYPE		"SSP"
	}
	tuples."word" {
		SOF_TKN_DAI_INDEX		"2"
	}
}
SectionData."DAICONFIG.SSP2_data_common" {
	tuples "DAICONFIG.SSP2_tuples_common"
}

SectionBE."SSP2-Codec" {
	id "0"
	index "0"
	default_hw_conf_id	"0"

	hw_configs [
		"SSP2"
	]
	data [
		"DAICONFIG.SSP2_data"
		"DAICONFIG.SSP2_data_common"

	]
}




SectionWidget."ssp2 Rx" {
       index "1"
       type "out_drv"
       no_pm "true"
}
SectionWidget."ssp2 Tx" {
       index "2"
       type "out_drv"
       no_pm "true"
}
